<?php
// $Id$

/**
 * @file
 * New Books module file
 *
 * This module fetches a list of newly acquired books from the library
 * and also displays the list to a page
 */

/**
 * Implements hook_help()
 */
function new_books_help($path, $arg) {
  if ($path === 'admin/help#new_books') {
    return t ('New Books module gets, stores, and displays newly acquired books');
  }
}

function new_books_show_filter_options() {
  $query = db_select('new_books', 'n');
  $query->fields('n', array(
    'simplified_fund',
  ));
  $query->groupBy('simplified_fund');
  $query->orderBy('simplified_fund', 'ASC');

  $simplified_funds = $query->execute();

  $html = '<label for="books_dropdown">Filter by subject:</label><select class="form-control" id="books_dropdown"><option value="All" data-subject="all">All</option>';
  foreach ($simplified_funds as $item) {
    $pattern1 = '/[&]/';
    $pattern2 = '/\s+/';
    $simplified_subject = preg_replace($pattern1, '', $item->simplified_fund);
    $simplified_subject = strtolower(preg_replace($pattern2, '-', $simplified_subject));
    $html .= '<option value="' . htmlspecialchars($item->simplified_fund) . '" data-subject="' . $simplified_subject . '">' . htmlspecialchars($item->simplified_fund) . '</option>';
  }
  $html .= '</select>';

  print $html;
}
function new_books_page($get_params = null) {

  $filter_subject;

  $query = db_select('new_books', 'n');
  $query->fields('n', array(
    'simplified_fund',
  ));
  $query->groupBy('simplified_fund');

  $simplified_funds = $query->execute();

  $subject_map = array();

  foreach($simplified_funds as $item) {
    $pattern1 = '/[&]/';
    $pattern2 = '/\s+/';
    $simplified_subject = preg_replace($pattern1, '', $item->simplified_fund);
    $simplified_subject = strtolower(preg_replace($pattern2, '-', $simplified_subject));
    //$subject_map[$item->simplified_fund] = $simplified_subject;
    $subject_map[$simplified_subject] = $item->simplified_fund;
  }

  // print '<pre>'; print_r($subject_map); print '</pre>';

  if ($get_params !== null && !empty($get_params['subject'])) {
    $filter_subject = $get_params['subject'];
  }
  // print 'Filter subject: ' . $subject_map[$filter_subject];
  $num_per_page = 8;

  $query = db_select('new_books', 'n')->extend('PagerDefault')
  ->fields('n', array(
    'id',
    'title',
    'author',
    'isbn',
    'mms_id',
    'fund_ledger_code',
    'publication_date',
    'simplified_fund',
    'img_url',
    'img_path',
  ))->limit($num_per_page);

  if (!empty($filter_subject)) {
    if ($filter_subject !== 'all') {
      $query->condition('simplified_fund', $subject_map[$filter_subject]);
    }
  }

  $results = $query->execute();
  $total = $query->countQuery()->execute()->fetchField();
  $no_book_image = 'https://csun-primo.hosted.exlibrisgroup.com/primo-explore/custom/01CALS_UNO/img/icon_book.png';

  $rows = array();

  foreach ($results as $row) {
    $row->isbn = explode(';', $row->isbn);
    $row->publication_date = preg_replace('/[\[\]\.]/', '', $row->publication_date);
    $row->author = preg_replace('/(,*-*\s*(\bauthor\b|\beditor\b)\.+,*)/', '', $row->author);

    //print '<pre>'; print_r($row->isbn); print '</pre>';
    // <img src="https://proxy-na.hosted.exlibrisgroup.com/exl_rewrite/syndetics.com/index.aspx?isbn=' . $row->isbn[0] . '/SC.JPG&client=primo" alt="book cover" style="max-height: 105px; border: 1px solid #ddd;"/>
    $html = '
      <div class="col-sm-3">
        <div class="new-book-item-container">
          <div class="new-book-item text-center">
            <div style="margin-bottom: 16px;">
              <a href="https://csun-primo.hosted.exlibrisgroup.com/primo-explore/search?query=any,exact,' . $row->mms_id . '&tab=everything&search_scope=EVERYTHING&vid=01CALS_UNO&facet=rtype,include,books&offset=0" target="_blank" title="' . $row->title . '">
                <img src="' . (filesize($row->img_path) < 2000 ? $no_book_image : $row->img_url) . '" alt="" />
              </a>
            </div>
            <div>
              <p class="bold">
                <a href="https://csun-primo.hosted.exlibrisgroup.com/primo-explore/search?query=any,exact,' . $row->mms_id . '&tab=everything&search_scope=EVERYTHING&vid=01CALS_UNO&facet=rtype,include,books&offset=0" target="_blank">' . $row->title . '</a>
              </p>
              ' . ((!empty($row->author)) ? '<p>' . $row->author . '</p>' : '') . ' 
              <p>' . $row->publication_date . '</p>
            </div>          
          </div>
        </div>
      </div>
    ';
    $rows[] = $html;
  }

  //$total = 57;
  //$num_per_page = 10;
  //$page = pager_default_initialize($total, $num_per_page);
  $output = theme('pager', array('quantity' => 5));
  print $output;

  $page_items = theme('new_books_custom', array(
    'items' => $rows,
  ));
  print '<div class="new-book-items row">' . $page_items . '</div>';


  $output = theme('pager', array('quantity' => 5));
  print $output;


    //print theme('pager', array('quantity', array('result' => $results)));
}

function new_books_theme() {
  $themes = array(
    'new_books_custom' => array(
      'template' => 'page--new_books',
      'variables' => array('items' => null),
    ),
  );
  return $themes;
}

/**
 * Function new_books_insert_list()
 *
 * Calls books API to get a list of newly acquired books.
 * Stores the results into the database.
 */
function new_books_insert_list() {
  
  $api_url = "https://library7.csun.edu/oviattphp/new-books/api/new-books.php";
  $filepath = 'public://new_books_thumbnails';
  $results_array = file_scan_directory($filepath, '/.*\.jpg$/');

  //print '<pre>'; print_r($results_array); print '</pre>';

  // Clear out all thumbnails first, then pull in the new images
  foreach ($results_array as $k => $v) {
    $file = $v->uri;
    file_unmanaged_delete($file);
  }

  //$rand_string = new_books_random_string($name_length = 8);
  //$filepath = 'public://new_books_thumbnails/' . $rand_string . '.jpg';
  //$image = file_get_contents('https://proxy-na.hosted.exlibrisgroup.com/exl_rewrite/books.google.com/books/content?id=1SAvDwAAQBAJ&printsec=frontcover&img=1&zoom=5&edge=curl');
  //$file = file_save_data($image, $filepath, FILE_EXISTS_REPLACE);
  //$loaded_image = image_load($filepath);
  //$thumb_image = $loaded_image;
  //$filepath = 'https://library7.csun.edu/';

  //print '<img class="img-responsive" src="' . file_create_url($filepath) . '" alt="book_cover" >';


  $query_params = array(
    'path' => 'new-books-combo',
  );

  $options = array(
    'timeout' => 150.0,
  );

  $full_url = $api_url . '?' . drupal_http_build_query($query_params);

  $response = drupal_http_request($full_url, $options);
  $json = json_decode($response->data);
  $simplified_fund_str   = 'replace(fund_ledger_code,__right(fund_ledger_code,_8),_\'\')';
  $simplified_fund_2_str = 'right(fund_ledger_code,_8)';

  // Process items if a valid array was returned
  if (is_array($json->items) && count($json->items) > 0) {
    // First clear the data from the DB
    $query = db_truncate('new_books');
    $query->execute();
    
    foreach ($json->items as $k => $item) {
      $zero = '0';
      unset($item->$zero);

      // Use group1 field as group_subject field and remove it; seems like it is no longer used
      if (!empty($item->fund_ledger_code)) {
        $item->subject = $item->fund_ledger_code;
      }
      if (!empty($item->po_line_type_name)) {
        $item->media_type = $item->po_line_type_name;
        unset($item->po_line_type_name);
      }
      if (!empty($item->po_line_creation_date)) {
        $item->creation_date = $item->po_line_creation_date;
        unset($item->po_line_creation_date);
      }
      if (!empty($item->po_line_modification_date)) {
        $item->modification_date = $item->po_line_modification_date;
        unset($item->po_line_modification_date);
      }
      if (!empty($item->po_line_reference)) {
        $item->line_reference = $item->po_line_reference;
        unset($item->po_line_reference);
      }

      if (!empty($item->$simplified_fund_str)) {
        //print '<pre>The receiving date str: '; print_r($item->$receiving_date_str); print '</pre>';
        $item->simplified_fund = $item->$simplified_fund_str;
        unset($item->$simplified_fund_str);
      } else {
        $item->simplified_fund = '';
        unset($item->$simplified_fund_str);
      }

      if (!empty($item->$simplified_fund_2_str)) {
        $item->simplified_fund_2 = $item->$simplified_fund_2_str;
        unset($item->$simplified_fund_2_str);
      } else {
        $item->simplified_fund_2 = '';
        unset($item->$simplified_fund_2_str);
      }

      if (empty($item->author)) {
        //$item->author = "No Author";
      }

      $img_url = 'https://proxy-na.hosted.exlibrisgroup.com/exl_rewrite/syndetics.com/index.aspx?isbn=' . $item->isbn[0] . '/SC.JPG&client=primo';
      $item->img_url = $img_url;

      $rand_string = new_books_random_string($name_length = 8);
      $filepath = 'public://new_books_thumbnails/' . $rand_string . '.jpg';
      $image = file_get_contents($img_url);
      $file = file_save_data($image, $filepath, FILE_EXISTS_REPLACE);
      $filepath = '/home/httpd/pages/sites/default/files/new_books_thumbnails/' . $rand_string . '.jpg';
      $item->img_path = $filepath;

    }
    foreach ($json->items as $item) {
      //$item->author = 'The Author';
      //$item->publisher = 'The Publisher';

      foreach ($item as $k => $obj) {
        if (is_array($obj)) {
          $item->$k = implode("; ", $obj);
        }
      }
    }

    //print "<pre>"; print_r($json->items); print "</pre>";

    $query = db_insert('new_books');
    $query->fields(array('author', 'isbn', 'publication_date', 'mms_id', 'publisher', 'title', 'fund_ledger_code', 'subject', 'media_type', 'creation_date', 'modification_date', 'line_reference', 'transaction_date', 'vendor_name', 'simplified_fund', 'simplified_fund_2', 'img_url', 'img_path'));

    // foreach ($json->items as $k => $item) {
    //   $query->values(json_decode(json_encode($item), true));
    // }
    //print '<pre>';
    for ($i = 0, $size = count($json->items); $i < $size; $i++) {
    // for ($i = 0, $size = 5; $i < $size; $i++) {
      //print_r($json->items[$i]);
      $query->values(json_decode(json_encode($json->items[$i]), true));
    }
    //print '</pre>';

    $result = $query->execute();
  } else {
    print '<p>Unable to process items</p>';
  }
}

/*
 * Implements hook_cron()
 */

function new_books_cron() {
  new_books_insert_list();
}

function new_books_random_string($name_length = 8) {
  $alpha_numeric = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  return substr(str_shuffle($alpha_numeric), 0, $name_length);
}